syntax = "proto3";

option go_package = "github.com/fsctl/tless/rpc";

package rpc;

// The greeting service definition.
service DaemonCtl {
  // Sends the console user's username+homedir to establish connectivity
  // and initialize the daemon with correct config.toml path
  rpc Hello (HelloRequest) returns (HelloResponse) {}

  // Gets the status of the daemon
  rpc Status (DaemonStatusRequest) returns (DaemonStatusResponse) {}

  // Commands daemon to check connection to object store and report back
  rpc CheckConn (CheckConnRequest) returns (CheckConnResponse) {}

  // Commands to synchronize config between client and daemon
  rpc ReadDaemonConfig (ReadConfigRequest) returns (ReadConfigResponse) {}
  rpc WriteToDaemonConfig (WriteConfigRequest) returns (WriteConfigResponse) {}

  // Backup command
  rpc Backup (BackupRequest) returns (BackupResponse) {}
  rpc CancelBackup (CancelRequest) returns (CancelResponse) {}

  // Commands for retrieving and pruning snapshots
  rpc ReadAllSnapshots (ReadAllSnapshotsRequest) returns (stream ReadAllSnapshotsResponse) {}
  rpc DeleteSnapshot (DeleteSnapshotRequest) returns (DeleteSnapshotResponse) {}

  // Restore command
  rpc Restore (stream RestoreRequest) returns (RestoreResponse) {}
  rpc CancelRestore (CancelRequest) returns (CancelResponse) {}

  // Special operations
  rpc WipeCloud (WipeCloudRequest) returns (WipeCloudResponse) {}

  // Bucket operations
  rpc ListBuckets (ListBucketsRequest) returns (ListBucketsResponse) {}
  rpc MakeBucket (MakeBucketRequest) returns (MakeBucketResponse) {}
  rpc GetBucketSalt (GetBucketSaltRequest) returns (GetBucketSaltResponse) {}
  rpc CheckBucketSaltPassword (CheckBucketSaltPasswordRequest) returns (CheckBucketSaltPasswordResponse) {}
}

message HelloRequest {
  string username = 1;
  string userHomeDir = 2;
}

message HelloResponse {
  bool DidSucceed = 1;
  string ErrMsg = 2;
}

message DaemonStatusRequest {}

message DaemonStatusResponse {
  enum State {
    IDLE = 0;
    CHECKING_CONN = 1;
    BACKING_UP = 2;
    RESTORING = 3;
    NEED_HELLO = 4;
    CLEANING_UP = 5;
  }
  State status = 1;
  string msg = 2;
  float percentage = 3;
}

message CheckConnRequest {
  string Endpoint = 1;
  string AccessKey = 2;
  string SecretKey = 3;
  string BucketName = 4;
  bool TrustSelfSignedCerts = 5;
}

message CheckConnResponse {
  enum CheckConnResult {
    SUCCESS = 0;
    ERROR = 1;
  }
  CheckConnResult result = 1;
  string errorMsg = 2;
}

message ReadConfigRequest {}

message ReadConfigResponse {
  string Endpoint = 1;
  string AccessKey = 2;
  string SecretKey = 3;
  string BucketName = 4;
  bool TrustSelfSignedCerts = 5;
  string MasterPassword = 6;
  string Salt = 7;
  repeated string Dirs = 8;
  repeated string Excludes = 9;
  bool Verbose = 10;

  bool IsValid = 11;
  string ErrMsg = 12;
}

message WriteConfigRequest {
  string Endpoint = 1;
  string AccessKey = 2;
  string SecretKey = 3;
  string BucketName = 4;
  bool TrustSelfSignedCerts = 5;
  string MasterPassword = 6;
  string Salt = 7;
  repeated string Dirs = 8;
  repeated string Excludes = 9;
  bool Verbose = 10;
}

message WriteConfigResponse {
  bool DidSucceed = 1;
  string ErrMsg = 2;
}

message BackupRequest {
  bool ForceFullBackup = 1;
}

message BackupResponse {
  bool IsStarting = 1;
  string ErrMsg = 2;
}

message CancelRequest {}

message CancelResponse {
  bool IsStarting = 1;
  string ErrMsg = 2;
}

message ReadAllSnapshotsRequest { }

message PartialSnapshot {
  string BackupName = 1;
  string SnapshotName = 2;
  int64 SnapshotTimestamp = 3;
  string SnapshotRawName = 4;
  repeated string RawRelPaths = 5;
}

message ReadAllSnapshotsResponse {
  bool DidSucceed = 1;
  string ErrMsg = 2;
  PartialSnapshot PartialSnapshot = 3;
  double PercentDone = 4;
}

message DeleteSnapshotRequest {
  string SnapshotRawName = 1;
}

message DeleteSnapshotResponse {
  bool DidSucceed = 1;
  string ErrMsg = 2;  
}

message RestoreRequest {
  string SnapshotRawName = 1;
  string RestorePath = 2;
  repeated string SelectedRelPaths = 3;
}

message RestoreResponse {
  bool isStarting = 1;
  string ErrMsg = 2;
}

message WipeCloudRequest {}

message WipeCloudResponse {
  bool isStarting = 1;
  string ErrMsg = 2;
}

message ListBucketsRequest {}

message ListBucketsResponse {
  repeated string Buckets = 1;
  string ErrMsg = 2;
}

message MakeBucketRequest {
  string BucketName = 1;
  string Region = 2;
}

message MakeBucketResponse {
  bool DidSucceed = 1;
  string ErrMsg = 2;
}

message GetBucketSaltRequest {
  string BucketName = 1;
}

message GetBucketSaltResponse {
  enum GetBucketSaltResult {
    SUCCESS = 0;
    ERR_NO_SALT = 1;
    ERR_MULTIPLE_SALTS = 2;
    ERR_OTHER = 3;
  }
  GetBucketSaltResult Result = 1;
  string ErrMsg = 2;
  string Salt = 3;
}

message CheckBucketSaltPasswordRequest {
  string BucketName = 1;
  string Salt = 2;
  string Password = 3;
}

message CheckBucketSaltPasswordResponse {
  enum CheckBucketSaltPasswordResult {
    SUCCESS = 0;
    ERR_NO_SALT = 1;
    ERR_SALT_WRONG = 2;
    ERR_PASSWORD_WRONG = 3;
    ERR_OTHER = 4;
  }
  CheckBucketSaltPasswordResult Result = 1;
  string ErrMsg = 2;
}